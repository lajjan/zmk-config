/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <300>;
};

/ {
	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};

		td: tapdance {
			compatible = "zmk,behavior-hold-tap";
			label = "TAPDANCE";
			#binding-cells = <2>;
			tapping-term-ms = <150>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
				&mt LG(Q) Q	&mt LG(W) W	&mt LG(E) E	&mt LG(R) R	&mt LG(T) T				&mt LG(Y) Y	&mt LG(U) U	&mt LG(I) I					&mt LG(O) O			&mt LG(P) P 
				&mt LG(A) A &mt LG(S) S	&mt LG(D) D	&mt LG(F) F	&mt LG(G) G				&mt LG(H) H	&mt LG(J) J	&mt LG(K) K					&mt LG(L) L			&mt LG(DOT) DOT
				&mt LG(Z) Z &mt LG(X) X	&mt LG(C) C	&mt LG(V) V	&mt LG(B) B				&mt LG(N) N	&mt LG(M) M	&mt LG(COMMA) COMMA	&mt LG(DOT) DOT	&mt LG(SLASH) SLASH
																&kp LALT		&kp SPACE		&sk LSHIFT				&sk LALT		&sl 1				&sk RCTRL
			>;
		};

		oneshot {
			bindings = <
				&kp ESC     &kp ATSN                    &kp HASH        &mt LG(LS(S)) DOLLAR    &kp PRCNT		            &kp CARET           &kp AMPS        &kp STAR    &kp SEMI        &kp COLON 
				&kp TAB     &kp UNDER                   &trans          &trans                      &td APOS LS(APOS) 	    &mt HOME BSLH       &kp LBRC        &kp RBRC    &mt END PIPE    &kp ENTER
				&kp TILDE   &mt LA(LS(N2)) LA(LS(N3)) 	&trans          &trans                      &kp DQT 	                &kp LBKT &kp LPRN        &kp RPRN    &kp RBKT        &to 3 
																								&kp EXCL        &kp MINUS  				    &trans	                    &trans              &trans          &to 2 
			>;
		};

		num_ctrl {
			bindings = <
				&kp ESC	&kp C_PP       	&kp C_PREV      &kp C_NEXT      &kp UNDER    			    &kp MINUS   &kp N7  &kp N8  &kp N9  &trans
				&kp TAB	&trans         	&kp C_VOL_DN    &kp C_VOL_UP    &kp PLUS 			        &kp EQUAL   &kp N4  &kp N5  &kp N6  &kp ENTER
				&trans	&kp KP_MULTIPLY	&trans          &trans          &kp DOT    			        &kp N0      &kp N1  &kp N2  &kp N3  &trans 
																&to 0           &sk LGUI        &trans  				    &trans      &trans  &trans 
			>;
		};
	};
};